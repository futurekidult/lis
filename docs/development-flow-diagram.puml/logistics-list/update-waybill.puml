@startuml

start
:点击修改运单按钮;
:请求"/waybill/detail"接口;
if(请求 成功?) then (yes)
  :将返回的数据赋给对应的表单项;
  :弹出修改运单表单;
  repeat
  if(修改的是订单号?) then (yes)
    :输入要修改的订单号;
    :请求"option/order-list"接口;
    if(请求 成功?) then (yes)
      :实时展示包含输入的字符串的订单下拉列表;
      :选定某一个订单号;
    else (no)
      :提示出错信息;
      stop
    endif
  elseif(修改的是SKU?) then (yes)
    :输入要修改的SKU;
    :请求"option/sku-list"接口;
    if(请求 成功?) then (yes)
      :实时展示包含输入的字符串的SKU下拉列表;
      :选定某一个SKU;
    else (no)
      :提示出错信息;
      stop
    endif
  elseif(修改的是仓库?) then (yes)
    :请求"/option/warehouse-list?oversea_location_id=&warehouse_area_id="接口;
    if(请求 成功?) then (yes)
      :将返回的数据赋给仓库下拉列表;
      :选定某一个仓库;
    else (no)
      :提示出错信息;
      stop
    endif
  elseif(修改的是客户国家?) then (yes)
    :获取国家、州和城市下拉列表;
    :邮编校验;
    :根据输入的国家和邮编调用checkZipCode()方法;
    note right
      checkZipCode()方法是借鉴了
      https://github.com/zipcodes/zipcodes.js
      没匹配到的邮编直接通过校验
    end note
  elseif(修改的是客户州?) then (yes)
    :将客户城市置空;
    :获取到客户州;
    :获取选中州的下拉列表;
  elseif (修改的是客户城市?) then (yes)
    :从客户城市的下拉列表中选定某一个选项;
  elseif(修改的是发货时间?) then (yes)
    :将选定后的时间通过时间转化函数，
    转换成时间戳;
  else (other)
    :直接修改即可;
  endif
 repeat while(校验 通过?) is  (no) not (yes) 
 note right 
  校验伪代码
  ====
  //客户邮箱：
    ^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$
  //客户地址: 
    ^[A-Za-z0-9- ]+$
  //客户电话：
    ^[A-Za-z0-9-.+ ]+$
 end note
 :请求"/waybill/update"接口;
 if(请求 成功?) then (yes)
  :提示修改成功;
  :请求"/waybill/list"接口，
  更新运单列表;
  :关闭弹窗;
else (no)
  :提示出错信息;
endif
else (no)
  :提示出错信息;
endif
end

@enduml