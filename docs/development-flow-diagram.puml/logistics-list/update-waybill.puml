@startuml

start
:点击修改运单按钮;
:请求"/waybill/detail"接口;
if(请求 成功?) then (yes)
  :将返回的数据赋给对应的表单项;
  :弹出修改运单表单;
  repeat
  if(修改的是订单号?) then (yes)
    :输入要修改的订单号;
    :请求"option/order-list"接口;
    if(请求 成功?) then (yes)
      :实时展示包含输入的字符串的订单下拉列表;
      :选定某一个订单号;
    else (no)
      :提示出错信息;
      stop
    endif
  elseif(修改的是SKU?) then (yes)
    :输入要修改的SKU;
    :请求"option/sku-list"接口;
    if(请求 成功?) then (yes)
      :实时展示包含输入的字符串的SKU下拉列表;
      :选定某一个SKU;
    else (no)
      :提示出错信息;
      stop
    endif
  elseif(修改的是仓库?) then (yes)
    :请求"/option/warehouse-list?oversea_location_id=&warehouse_area_id="接口;
    if(请求 成功?) then (yes)
      :将返回的数据赋给仓库下拉列表;
      :选定某一个仓库;
    else (no)
      :提示出错信息;
      stop
    endif
  elseif(修改的是客户国家?) then (yes)
    if(localStorage customer country 已存在?) then (yes)
      :从localStorage中获取客户国家下拉树列表;
    else (no)
      :请求"/option/country-list"接口;
      if(请求 成功?) then (yes)
        :本地存储 customer country;
      else (no)
        :提示出错信息;
      stop
      endif
    endif
    :输入客户国家树;
    :从下拉列表中选定一个国家;
    :客户州和客户城市置空;
    :遍历户国家下拉树列表，
    找到与选定的国家 id 一致的州对象，
    将它的 children 数组赋给客户州下拉列表;
  elseif(修改的是客户州?) then (yes)
    :将客户城市置空;
    :从客户州的下拉列表中选定某一个选项;
    :遍历刚找到的州对象，
    找到与选定的州对象 id 一致的州对象，
    将它的 children 数组赋给客户城市下拉列表;
  elseif (修改的是客户城市?) then (yes)
    :从客户城市的下拉列表中选定某一个选项;
  elseif(修改的是发货时间?) then (yes)
    :将选定后的时间通过时间转化函数，
    转换成时间戳;
  else (other)
    :直接修改即可;
  endif
 repeat while(校验 通过?) is  (no) not (yes) 
 :请求"/waybill/update"接口;
 if(请求 成功?) then (yes)
  :提示修改成功;
  :请求"/waybill/list"接口，
  更新运单列表;
  :关闭弹窗;
else (no)
  :提示出错信息;
endif
else (no)
  :提示出错信息;
  stop
endif
end

@enduml