@startuml

start
if(localStorage warehouse?) then (yes)
  :将本地存储的数据渲染到表格;
else (no)
  :请求"/system/base/warehouse-list?current_page=&page_size="接口;
  if(请求 成功?) then (yes)
    :本地存储返回的数据，存入warehouse变量中;
    else (no)
      :提示出错信息;
      stop
    endif
endif
split
  :点击修改按钮，
  获取到该仓库的id、海外仓id、仓库分布id和仓库名warehouse_name;
  :将获取到的数据赋给修改仓库表单对象，
  且将海外仓和仓库分布表单项置灰;
  :弹出修改仓库弹窗;
  repeat
    :修改仓库名称;
  repeat while(表单校验 通过?) is (no) not (yes)
  note right 
    校验规则伪代码
    ====
    //允许中英文，数字，下划线，中划线
    let reg = new RegExp
    ("^[\u4E00-\u9FA5A-Za-z0-9_-]+$")
    //true: 通过校验; false: 未通过校验
    reg.test(str) 
  end note
  :请求"/system/base/warehouse-update"接口;
  if(请求 成功?) then (yes)
    :设置current_page = 1;
    :请求"/system/base/warehouse-list?current_page=&page_size="接口;
    :更新本地存储的warehouseList;
    :关闭修改弹窗;
  else (no)
    :提示出错信息;
  endif
split again
  :点击新增按钮;
  :从localStorage获取海外仓列表数据和仓库分布数据，
  并赋给新增表单对应项的下拉列表;
  :弹出新增表单;
  :选定海外仓以及仓库分布;
  repeat
    :输入仓库名称;
  repeat while(表单校验 通过?) is (no) then (yes)
  note right 
    校验规则伪代码
    ====
    //允许中英文，数字，下划线，中划线
    let reg = new RegExp
    ("^[\u4E00-\u9FA5A-Za-z0-9_-]+$")
    //true: 通过校验; false: 未通过校验
    reg.test(str) 
  end note
  :请求"/system/base/warehouse-create"接口;
  if(请求 成功?) then (yes)
    :设置current_page = 1;
    :请求"/system/base/warehouse-list?current_page=&page_size="接口;
    :更新本地存储的warehouseList;
    :关闭新增弹窗;
  else (no)
    :提示出错信息;
  endif
split again
  :切换当前页;
  :设置current_page为当前页;
  :请求"/system/base/logistic-supplier-list?current_page=&page_size="接口;
  if(请求 成功?) then (yes)
    :将返回数据渲染到表格;
  else (no)
    :提示出错信息;
  endif
split again 
  :切换每页显示条数;
  :设置current_page = 1;
  :设置page_size为当前选中的每页展示条数;
  :请求"/system/base/logistic-supplier-list?current_page=&page_size="接口;
  if(请求 成功?) then (yes)
    :将返回数据渲染到表格;
  else (no)
    :提示出错信息;
  endif
end split
end

@enduml